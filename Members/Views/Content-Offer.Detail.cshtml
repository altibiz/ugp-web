@using Members.Utils
@using OrchardCore
@using OrchardCore.ContentManagement
@using Members.Core
@using Members.Base;

@{
	ContentItem contentItem = Model.ContentItem;
	var offer = contentItem.AsInit<Offer>();
	var companyItem = await Orchard.GetContentItemByIdAsync(offer.Company?.GetId());
	Html.RenderPartial("_Header", offer.ContentItem.DisplayText);

	if (!User.Identity.IsAuthenticated)
	{
		<h2>
			<a asp-route-area="OrchardCore.Users" asp-controller="Account" asp-action="Login" asp-route-returnurl="@FullRequestPath">@T["Members only, click here to log in"]</a>
		</h2>
	}
	else
	{

		<blockquote>
			@if (offer.FeaturedImage?.Paths.FirstOrDefault() != null)
			{
				<div class="icon-box">
					<img src="/media/@offer.FeaturedImage.Paths.FirstOrDefault()" class="w-100 d-block mx-auto d-block" alt="">
				</div>
			}
			else
			{
				<img src="https://www.glaspoduzetnika.hr/assets/images/glaspoduzetnika-logo.png" class="rounded mx-auto d-block" alt="">
			}
			<div class="fs-5">
				<small>

					@await DisplayAsync(Model.DescriptionZone)
				</small>
			</div>

			@if (!string.IsNullOrWhiteSpace(offer.YoutubeVideoId.Text))
			{
				<div class="ratio ratio-16x9 my-4">
					<iframe class="embed-responsive-item" src="@(String.Format("https://www.youtube.com/embed/{0}", offer.YoutubeVideoId.Text))"></iframe>
				</div>
			}

			<ul class="list-group d-inline-flex p-2 bd-highlight fs-6">


				@if (companyItem != null)
				{
					var company = companyItem.AsInit<Company>();

					if (company.Logo?.Paths.FirstOrDefault() != null)
					{
						<li class="list-group-item p-0 border-0">
							<div class="icon-box">
								<img src="../media/@company.Logo.Paths.FirstOrDefault()" class="w-100 d-block" alt="">
							</div>
						</li>
					}

					@if (!string.IsNullOrWhiteSpace(company.ContentItem.DisplayText))
					{
						<li class="list-group-item p-0 border-0 py-2">
							<div class="">@T["CompanyName"]:</div>
							<div class="">@company.ContentItem.DisplayText</div>
						</li>
					}
				}

				@if (!string.IsNullOrWhiteSpace(offer.ContactPerson.Text))
				{
					<li class="list-group-item p-0 border-0 py-4">
						<div class="text-uppercase ">@T["Contact Person"]:</div>
						<div class="">@offer.ContactPerson.Text</div>
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(offer.Address.Text))
				{
					<li class="list-group-item p-0 border-0">
						<div class="icon-box"><i class="fas fa-map-marker"></i><span class="px-2">@offer.Address.Text</span></div>
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(offer.Web.Url))
				{
					<li class="list-group-item p-0 border-0">
						<div class="icon-box"><i class="fas fa-phone-square-alt"></i><span class="px-2">@offer.Phone.Text</span></div>
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(offer.Web.Url))
				{
					<li class="list-group-item p-0 border-0">
						<a href="@offer.Web.Url">
							<div class="icon-box"><i class="fas fa-globe"></i><span class="px-2">@T["Web"]</span></div>
						</a>
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(offer.Instagram.Url))
				{
					<li class="list-group-item p-0 border-0">
						<a href="@offer.Instagram.Url">
							<div class="icon-box"><i class="fab fa-instagram-square"></i><span class="px-2">@T["Instagram"]</span></div>
						</a>
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(offer.Facebook.Url))
				{
					<li class="list-group-item p-0 border-0">
						<a href="@offer.Facebook.Url">
							<div class="icon-box"><i class="fab fa-facebook-square"></i><span class="px-2">@T["Facebook"]</span></div>
						</a>
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(offer.LinkedIn.Url))
				{
					<li class="list-group-item p-0 border-0">
						<a href="@offer.LinkedIn.Url">
							<div class="icon-box"><i class="fab fa-linkedin"></i><span class="px-2">@T["LinkedIn"]</span></div>
						</a>
					</li>
				}
			</ul>
		</blockquote>
	}
}